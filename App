/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 */

package com.mycompany.mavenproject1;

/**
 *
 * @author 166010
 */

import java.util.*;

class Product {
    String name;
    double price;

    Product(String name, double price) {
        this.name = name;
        this.price = price;
    }

    @Override
    public String toString() {
        return name + " ($" + price + ")";
    }
}

public class Mavenproject1 {
    // Array of product categories
    String[] categories = {"Laptops", "Smartphones", "Accessories"};

    // ArrayList of products
    ArrayList<Product> products = new ArrayList<>();

    // Stack for customer queries
    Stack<String> customerQueries = new Stack<>();

    // LinkedList for orders
    LinkedList<Product> orders = new LinkedList<>();

    // TreeMap for products by category
    TreeMap<String, ArrayList<Product>> productTree = new TreeMap<>();

    Mavenproject1() {
        // Initialize productTree with categories
        for (String category : categories) {
            productTree.put(category, new ArrayList<>());
        }
    }

    void addProduct(String category, Product product) {
        if (productTree.containsKey(category)) {
            productTree.get(category).add(product);
            products.add(product);
        } else {
            System.out.println("Category not found!");
        }
    }

    void addCustomerQuery(String query) {
        customerQueries.push(query);
    }

    void processOrder(Product product) {
        orders.add(product);
    }

    void displayProducts() {
        for (String category : productTree.keySet()) {
            System.out.println("Category: " + category);
            for (Product product : productTree.get(category)) {
                System.out.println(" - " + product);
            }
        }
    }

    void displayCustomerQueries() {
        System.out.println("Customer Queries:");
        while (!customerQueries.isEmpty()) {
            System.out.println(" - " + customerQueries.pop());
        }
    }

    void displayOrders() {
        System.out.println("Orders:");
        for (Product order : orders) {
            System.out.println(" - " + order);
        }
    }

    public static void main(String[] args) {
        Mavenproject1 shop = new Mavenproject1();

        // Adding products
        shop.addProduct("Laptops", new Product("Dell XPS 13", 999.99));
        shop.addProduct("Smartphones", new Product("iPhone 13", 799.99));
        shop.addProduct("Accessories", new Product("Wireless Mouse", 29.99));

        // Adding customer queries
        shop.addCustomerQuery("Do you have any discounts?");
        shop.addCustomerQuery("What is the warranty period for laptops?");

        // Processing orders
        shop.processOrder(new Product("Dell XPS 13", 999.99));
        shop.processOrder(new Product("Wireless Mouse", 29.99));

        // Displaying information
        shop.displayProducts();
        shop.displayCustomerQueries();
        shop.displayOrders();
    }
}
